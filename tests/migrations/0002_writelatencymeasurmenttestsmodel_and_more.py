# Generated by Django 4.1.2 on 2023-06-01 13:33

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('tests', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='WriteLatencyMeasurmentTestsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=100)),
                ('startedBy', models.CharField(max_length=50)),
                ('startedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('finishedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('fileName', models.CharField(default='123.csv', max_length=100)),
                ('dataSetupTime', models.IntegerField(default=15)),
                ('iteration', models.IntegerField(default=0)),
                ('testId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests.writelatencytestsmodel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RowHammeringMeasurmentTestsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=100)),
                ('startedBy', models.CharField(max_length=50)),
                ('startedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('finishedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('fileName', models.CharField(default='123.csv', max_length=100)),
                ('dataSetupTime', models.IntegerField(default=15)),
                ('iteration', models.IntegerField(default=0)),
                ('testId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests.rowhammeringtestsmodel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReliabilityMeasurmentTestsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=100)),
                ('startedBy', models.CharField(max_length=50)),
                ('startedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('finishedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('fileName', models.CharField(default='123.csv', max_length=100)),
                ('dataSetupTime', models.IntegerField(default=15)),
                ('iteration', models.IntegerField(default=0)),
                ('testId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests.reliabilitytestsmodel')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReadLatencyMeasurmentTestsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=100)),
                ('startedBy', models.CharField(max_length=50)),
                ('startedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('finishedAt', models.DateTimeField(default=django.utils.timezone.now)),
                ('fileName', models.CharField(default='123.csv', max_length=100)),
                ('dataSetupTime', models.IntegerField(default=15)),
                ('iteration', models.IntegerField(default=0)),
                ('testId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests.readlatencytestsmodel')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
